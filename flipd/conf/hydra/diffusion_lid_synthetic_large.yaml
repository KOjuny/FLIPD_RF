# Performs a sweep over a variety of datasets and LID estimators
# (1) Stanczuk et al. (2) FlipdEstimator
# These are large synthetic data

run:
  dir: ${out_dir}/hydra/${now:%Y-%m-%d}/${now:%H\:%M\:%S}
sweep:
  dir: ${out_dir}/hydra/${now:%Y-%m-%d}/${now:%H\:%M\:%S}-sweep
mode: MULTIRUN

sweeper:
  params:
    # sweep over all the different large synthetic data types
    dataset: "manifolds/large/affine_1000D_100d_uniform,manifolds/large/affine_1000D_900d_gaussian,manifolds/large/affine_1000D_900d_uniform,manifolds/large/affine_2000D_100d_200d_uniform,manifolds/large/affine_800D_10d_80d_200d_uniform,manifolds/large/affine_800D_200d_uniform,manifolds/large/squiggly_05_freq_2000D_200d_uniform,manifolds/large/squiggly_10_freq_2000D_200d_uniform,manifolds/large/squiggly_1_freq_2000D_200d_uniform,manifolds/large/squiggly_5_freq_2000D_200d_uniform"

    +experiment: train_diffusion_tabular 

    # monitor fokker planck
    +callbacks@all_callbacks.lid1: flipd_curve
    all_callbacks.lid1.frequency: 400
    all_callbacks.lid1.subsample_size: 4096
    # set a larger chunk size for faster computation of the FLIPD which is the bottleneck here
    all_callbacks.lid1.lid_estimation_args.chunk_size: 4096 

    # monitor normal bundles
    +callbacks@all_callbacks.lid2: normal_bundle_lid_curve 
    all_callbacks.lid2.frequency: 400
    all_callbacks.lid2.subsample_size: 4096
    all_callbacks.lid2.lid_preprocessing_args.score_batch_size: 4096
    
    # monitor sample quality
    +callbacks@all_callbacks.umap: umap 
    all_callbacks.umap.frequency: 400


    train.trainer.max_epochs: 800

    # set learning rate to smaller values for more accracy
    lightning_dgm.optim_partial.lr: 1e-5

    # Customize progress bar to avoid having a huge log in stderr of mlflow
    +callbacks@all_callbacks.progress_bar: trainer_progress_bar
    all_callbacks.progress_bar.refresh_rate: 1000

    # train.trainer.fast_dev_run: true # uncomment for testing
    experiment_name: diffusion_lid_synthetic_large
    sample.num: 0 # cancel final sampling (Important!)
